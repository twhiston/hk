var {{ .Id }}Cmd = &cobra.Command{
	Use:   "{{ .Id }}",
	Short: "{{ .Description }}",
	Long:  `{{ .Long }}`,
	Run: func(cmd *cobra.Command, args []string) {

	    {{ if .Index.Required }}
	    if len(args) < ({{ .Index.Arg }}+1) {
	        HandleError(errors.New("argument {{ .Index.Arg }} is required for this command"))
	    }
	    {{ end }}
		api := GetApi()
		resp := new({{ .ResponseType }})
		{{ if .Params }}
		querystring := make(map[string]string, {{ len .Params }})

		{{ range $k, $v := .Params -}}
        value, e := cmd.{{ if $v.Persistent }}Persistent{{ end }}Flags().Get{{ $v.Type | ToUpper }}("{{ $v.Name }}")
        HandleError(e)
        querystring["{{ $v.Name }}"] = value
        {{ end -}}
		{{ end }}
		{{ if .ParameterHandler }}
		pe := {{ .ParameterHandler }}(&querystring)
		HandleError(pe)
		{{ end }}
		_, err := api.Res("{{ .Path }}", resp).{{ if .Index.Required }}Id(args[{{ .Index.Arg }}]).{{ end }}Get({{ if .Params }}querystring{{ end }})
		HandleError(err)
		{{ if .HasResponse -}}
		{{- if .ArrayResponse }}
		table := clitable.New()
        for k, v := range *resp {
        	if k == 0 {
        		table.AddRow(getStructTags(v)...)
        	}
        	table.AddRow(getStructVals(v)...)
        }
        table.Print()
		{{- else }}
		PrintResponse(*resp)
		{{ end }}
		{{- end }}
	},
}
